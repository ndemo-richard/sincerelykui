{"version":3,"file":"index.esm.js","sources":["../super-pane/use-router.tsx","../node_modules/style-inject/dist/style-inject.es.js","../super-pane/bulk-actions-menu/index.tsx","../super-pane/create-emitter.ts","../super-pane/client.ts","../super-pane/use-paginated-client.ts","../super-pane/helpers/get-selectable-fields.ts","../super-pane/column-selector/index.tsx","../super-pane/block-content-to-string.ts","../super-pane/cell/index.tsx","../super-pane/search-field/index.tsx","../super-pane/hooks/use-sticky-state-set.ts","../super-pane/hooks/use-sticky-state-order.ts","../super-pane/table-header-inner/index.tsx","../super-pane/create-super-pane.tsx"],"sourcesContent":["import React, { createContext, useContext } from 'react';\n\nconst RouterContext = createContext<any>(null);\n\n// https://github.com/sanity-io/demo-custom-workflow/blob/d00b0f73fbf8543724772802749bd846078075d6/app/lib/router/internalRouterContextTypeCheck.js#L1\nfunction internalRouterContextTypeCheck(\n  context: any,\n  propName: any,\n  componentName: any,\n) {\n  if (!context.__internalRouter) {\n    throw new Error(\n      'The router is accessed outside the context of a <RouterProvider>.' +\n        ' No router state will be accessible and links will not go anywhere. To fix this,' +\n        ` make sure ${componentName} is rendered in the context of a <RouterProvider /> element`,\n    );\n  }\n}\n\n// https://github.com/sanity-io/demo-custom-workflow/blob/d00b0f73fbf8543724772802749bd846078075d6/app/lib/router/provider.js\nexport class RouterProvider extends React.Component {\n  static contextTypes = {\n    __internalRouter: internalRouterContextTypeCheck,\n  };\n\n  render() {\n    const router = this.context.__internalRouter;\n\n    return (\n      <RouterContext.Provider value={router}>\n        {this.props.children}\n      </RouterContext.Provider>\n    );\n  }\n}\n\nfunction useRouter() {\n  return useContext(RouterContext);\n}\n\nexport default useRouter;\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React, { useState, useMemo } from 'react';\nimport { nanoid } from 'nanoid';\nimport {\n  Menu,\n  MenuItem,\n  MenuDivider,\n  Dialog,\n  Button,\n  MenuButton,\n  useToast,\n} from '@sanity/ui';\nimport {\n  ResetIcon,\n  UnpublishIcon,\n  PublishIcon,\n  TrashIcon,\n} from '@sanity/icons';\nimport schema from 'part:@sanity/base/schema';\nimport SanityPreview from 'part:@sanity/base/preview';\nimport styles from './styles.module.css';\nimport _client from 'part:@sanity/base/client';\nimport { ErrorBoundary } from 'react-error-boundary';\nconst client = _client as import('@sanity/client').SanityClient;\n\ninterface Props {\n  disabled: Boolean;\n  className?: string;\n  typeName: string;\n  selectedIds: Set<string>;\n  onDelete: () => void;\n}\n\nconst ErroredDocuments = ({ e, schemaType }: { e: any; schemaType: any }) => {\n  const idsWithErrors: string[] =\n    'details' in e ? e.details.items.map((item: any) => item.error.id) : [];\n\n  if (!idsWithErrors.length) {\n    return null;\n  }\n\n  const plural = idsWithErrors.length !== 1;\n\n  return (\n    <ErrorBoundary fallback={null}>\n      <p>\n        Please unselect {plural ? 'these' : 'this'} document{plural ? 's' : ''}{' '}\n        and try again:\n      </p>\n      <p>\n        {idsWithErrors.map((id) => (\n          <SanityPreview\n            type={schemaType}\n            key={id}\n            value={{ _id: id, _type: 'movie' }}\n          />\n        ))}\n      </p>\n    </ErrorBoundary>\n  );\n};\n\nconst removeDraftPrefix = (s: string) =>\n  s.startsWith('drafts.') ? s.substring('drafts.'.length) : s;\n\nfunction BulkActionsMenu({\n  disabled,\n  className,\n  selectedIds,\n  typeName,\n  onDelete,\n}: Props) {\n  const buttonId = useMemo(nanoid, []);\n  const schemaType = useMemo(() => schema.get(typeName), [typeName]);\n  const toast = useToast();\n  const dialogId = useMemo(nanoid, []);\n  const [dialogMode, setDialogMode] = useState<\n    'discard_changes' | 'unpublish' | 'publish' | 'delete' | null\n  >(null);\n  const [loading, setLoading] = useState(false);\n\n  const handleDiscardChanges = async () => {\n    setLoading(true);\n\n    try {\n      const ids = await client.fetch<string[]>('*[_id in $ids]._id', {\n        ids: Array.from(selectedIds)\n          .map((id) => [id, `drafts.${id}`])\n          .flat(),\n      });\n\n      const idSet = ids.reduce((set, id) => {\n        set.add(id);\n        return set;\n      }, new Set<string>());\n\n      const draftIdsThatAlsoHavePublishedIds = ids.filter(\n        (id) =>\n          id.startsWith('drafts.') && idSet.has(id.substring('drafts.'.length))\n      );\n\n      const t = client.transaction();\n\n      for (const id of draftIdsThatAlsoHavePublishedIds) {\n        t.delete(id);\n      }\n\n      await t.commit();\n      setDialogMode(null);\n    } catch (e) {\n      console.warn(e);\n\n      toast.push({\n        title: 'Error Bulk Discarding Changes',\n        description: (\n          <>\n            <p>The bulk discard changes failed.</p>\n\n            <ErroredDocuments e={e} schemaType={schemaType} />\n          </>\n        ),\n        status: 'error',\n        closable: true,\n        duration: 30 * 1000,\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleUnpublish = async () => {\n    setLoading(true);\n\n    try {\n      const publishedDocuments = await client.fetch<any[]>('*[_id in $ids]', {\n        ids: Array.from(selectedIds),\n      });\n\n      const t = client.transaction();\n\n      for (const publishedDocument of publishedDocuments) {\n        t.createIfNotExists({\n          ...publishedDocument,\n          _id: `drafts.${publishedDocument._id}`,\n          _updatedAt: new Date().toISOString(),\n        });\n        t.delete(publishedDocument._id);\n      }\n\n      await t.commit();\n    } catch (e) {\n      console.warn(e);\n\n      toast.push({\n        title: 'Error Bulk Unpublishing',\n        description: (\n          <>\n            <p>\n              The bulk unpublished failed. This usually occurs because there are\n              other documents referencing the documents you’re trying to\n              unpublish.\n            </p>\n\n            <ErroredDocuments e={e} schemaType={schemaType} />\n          </>\n        ),\n        status: 'error',\n        closable: true,\n        duration: 30 * 1000,\n      });\n    } finally {\n      setDialogMode(null);\n      setLoading(false);\n    }\n  };\n\n  const handlePublish = async () => {\n    setLoading(true);\n\n    try {\n      const draftDocuments = await client.fetch<any[]>('*[_id in $ids]', {\n        ids: Array.from(selectedIds).map((id) => `drafts.${id}`),\n      });\n\n      const t = client.transaction();\n\n      for (const draftDocument of draftDocuments) {\n        t.createOrReplace({\n          ...draftDocument,\n          _id: removeDraftPrefix(draftDocument._id),\n          _updatedAt: new Date().toISOString(),\n        });\n        t.delete(draftDocument._id);\n      }\n\n      await t.commit();\n    } catch (e) {\n      console.warn(e);\n\n      toast.push({\n        title: 'Error Bulk Publishing',\n        description: (\n          <>\n            <p>The bulk publish failed.</p>\n\n            <ErroredDocuments e={e} schemaType={schemaType} />\n          </>\n        ),\n        status: 'error',\n        closable: true,\n        duration: 30 * 1000,\n      });\n    } finally {\n      setDialogMode(null);\n      setLoading(false);\n    }\n  };\n\n  const handleDelete = async () => {\n    setLoading(true);\n\n    try {\n      const idsToDelete = await client.fetch<string[]>('*[_id in $ids]._id', {\n        ids: Array.from(selectedIds)\n          .map((id) => [id, `drafts.${id}`])\n          .flat(),\n      });\n\n      const t = client.transaction();\n\n      for (const id of idsToDelete) {\n        t.delete(id);\n      }\n\n      await t.commit();\n      onDelete();\n    } catch (e) {\n      console.warn(e);\n\n      toast.push({\n        title: 'Error Bulk Deleting',\n        description: (\n          <>\n            <p>\n              The bulk delete failed. This usually occurs because there are\n              other documents referencing the documents you’re trying to delete.\n            </p>\n\n            <ErroredDocuments e={e} schemaType={schemaType} />\n          </>\n        ),\n        status: 'error',\n        closable: true,\n        duration: 30 * 1000,\n      });\n    } finally {\n      setDialogMode(null);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <>\n      <MenuButton\n        button={\n          disabled ? (\n            <Button fontSize={1} paddingY={1} paddingX={2} disabled>\n              Bulk Actions\n            </Button>\n          ) : (\n            <Button fontSize={1} paddingY={1} paddingX={2}>\n              Bulk Actions\n            </Button>\n          )\n        }\n        portal\n        id={buttonId}\n        menu={\n          <Menu style={{ textAlign: 'left' }}>\n            {/* TODO: */}\n            {/* <MenuItem className=\"prevent-nav\" text=\"Bulk Edit\" icon={EditIcon} /> */}\n            {/* <MenuDivider /> */}\n            {/* <MenuItem className=\"prevent-nav\" text=\"Export\" icon={DownloadIcon} /> */}\n            <MenuItem\n              className=\"prevent-nav\"\n              text=\"Discard changes\"\n              icon={ResetIcon}\n              onClick={() => setDialogMode('discard_changes')}\n            />\n            <MenuItem\n              className=\"prevent-nav\"\n              text=\"Unpublish\"\n              icon={UnpublishIcon}\n              onClick={() => setDialogMode('unpublish')}\n            />\n            <MenuItem\n              className=\"prevent-nav\"\n              text=\"Publish\"\n              icon={PublishIcon}\n              onClick={() => setDialogMode('publish')}\n            />\n            <MenuDivider />\n            <MenuItem\n              className=\"prevent-nav\"\n              tone=\"critical\"\n              icon={TrashIcon}\n              text=\"Delete\"\n              onClick={() => setDialogMode('delete')}\n            />\n          </Menu>\n        }\n        placement=\"bottom\"\n      />\n\n      {dialogMode === 'discard_changes' && (\n        <Dialog\n          id={dialogId}\n          header={<>Discard Changes</>}\n          zOffset={100000}\n          footer={\n            <div className={styles.footer}>\n              <Button\n                text=\"Cancel\"\n                mode=\"ghost\"\n                disabled={loading}\n                onClick={() => setDialogMode(null)}\n              />\n              <Button\n                text=\"Discard Changes\"\n                tone=\"critical\"\n                mode=\"ghost\"\n                disabled={loading}\n                onClick={handleDiscardChanges}\n              />\n            </div>\n          }\n          onClose={() => setDialogMode(null)}\n        >\n          <div className={styles.content}>\n            <p>\n              Are you sure you want to discard changes to{' '}\n              <strong>{selectedIds.size}</strong> document\n              {selectedIds.size === 1 ? '' : 's'}?\n            </p>\n            <p>\n              Discarding changes reverts changes made to any drafts of the\n              selected documents and restores the currently published versions.\n            </p>\n            <p>\n              You can use the{' '}\n              <a\n                href=\"https://www.sanity.io/docs/history-experience\"\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n              >\n                document history\n              </a>{' '}\n              of each individual document to track these changes.\n            </p>\n          </div>\n        </Dialog>\n      )}\n\n      {dialogMode === 'unpublish' && (\n        <Dialog\n          id={dialogId}\n          header={<>Unpublish Documents</>}\n          zOffset={100000}\n          footer={\n            <div className={styles.footer}>\n              <Button\n                text=\"Cancel\"\n                mode=\"ghost\"\n                disabled={loading}\n                onClick={() => setDialogMode(null)}\n              />\n              <Button\n                text=\"Unpublish Documents\"\n                tone=\"critical\"\n                mode=\"ghost\"\n                disabled={loading}\n                onClick={handleUnpublish}\n              />\n            </div>\n          }\n          onClose={() => setDialogMode(null)}\n        >\n          <div className={styles.content}>\n            <p>\n              Are you sure you want to unpublish{' '}\n              <strong>{selectedIds.size}</strong> document\n              {selectedIds.size === 1 ? '' : 's'}?\n            </p>\n            <p>\n              If you unpublish a document, it will no longer be available to the\n              public. Its contents will be moved into a draft if a draft does\n              not already exist. From there you can continue to author the\n              document and re-publish it later.\n            </p>\n            <p>\n              You can use the{' '}\n              <a\n                href=\"https://www.sanity.io/docs/history-experience\"\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n              >\n                document history\n              </a>{' '}\n              of each individual document to track these changes.\n            </p>\n          </div>\n        </Dialog>\n      )}\n\n      {dialogMode === 'publish' && (\n        <Dialog\n          id={dialogId}\n          header={<>Publish Documents</>}\n          zOffset={100000}\n          footer={\n            <div className={styles.footer}>\n              <Button\n                text=\"Cancel\"\n                mode=\"ghost\"\n                disabled={loading}\n                onClick={() => setDialogMode(null)}\n              />\n              <Button\n                text=\"Publish Documents\"\n                tone=\"positive\"\n                disabled={loading}\n                onClick={handlePublish}\n              />\n            </div>\n          }\n          onClose={() => setDialogMode(null)}\n        >\n          <div className={styles.content}>\n            <p>\n              Are you sure you want to publish{' '}\n              <strong>{selectedIds.size}</strong> document\n              {selectedIds.size === 1 ? '' : 's'}?\n            </p>\n            <p>\n              Publishing a document makes the current contents of each document\n              publicly available.\n            </p>\n            <p>\n              You can use the{' '}\n              <a\n                href=\"https://www.sanity.io/docs/history-experience\"\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n              >\n                document history\n              </a>{' '}\n              of each individual document to track these changes.\n            </p>\n          </div>\n        </Dialog>\n      )}\n\n      {dialogMode === 'delete' && (\n        <Dialog\n          id={dialogId}\n          header={<>Delete Documents</>}\n          zOffset={100000}\n          footer={\n            <div className={styles.footer}>\n              <Button\n                text=\"Cancel\"\n                mode=\"ghost\"\n                disabled={loading}\n                onClick={() => setDialogMode(null)}\n              />\n              <Button\n                text=\"Delete Documents\"\n                tone=\"critical\"\n                disabled={loading}\n                onClick={handleDelete}\n              />\n            </div>\n          }\n          onClose={() => setDialogMode(null)}\n        >\n          <div className={styles.content}>\n            <p>\n              Are you sure you want to delete{' '}\n              <strong>{selectedIds.size}</strong> document\n              {selectedIds.size === 1 ? '' : 's'}?\n            </p>\n            <p>\n              Deleting a document makes it no longer available to the public as\n              well as removing any draft versions of it.\n            </p>\n            <p>\n              <strong>Note:</strong> in order to delete a document, it must not\n              be referenced by any other document. You may have to remove those\n              references first.\n            </p>\n          </div>\n        </Dialog>\n      )}\n    </>\n  );\n}\n\nexport default BulkActionsMenu;\n","function createEmitter() {\n  type Listener = () => void;\n  const listeners = new Set<Listener>();\n\n  function subscribe(listener: Listener) {\n    listeners.add(listener);\n\n    const unsubscribe = () => {\n      listeners.delete(listener);\n    };\n\n    return unsubscribe;\n  }\n\n  function notify() {\n    for (const listener of listeners) {\n      listener();\n    }\n  }\n\n  return { subscribe, notify };\n}\n\nexport default createEmitter;\n","import _client from 'part:@sanity/base/client';\nconst sanityClient = _client as import('@sanity/client').SanityClient;\nlet client = sanityClient\n\nif (typeof sanityClient.withConfig === 'function') {\n  client = sanityClient.withConfig({\n    apiVersion: \"1\"\n  })\n}\n\nexport default client;\n","import { useState, useEffect, useCallback } from 'react';\nimport { debounceTime, tap } from 'rxjs/operators';\nimport { nanoid } from 'nanoid';\nimport client from './client';\nimport { ColumnOrder } from './hooks/use-sticky-state-order';\n\nexport interface Cursor {\n  results: any[];\n  nextPage: () => Promise<Cursor>;\n  previousPage: () => Promise<Cursor>;\n  totalPages: number;\n  page: number;\n}\n\nconst removeDraftPrefix = (s: string) =>\n  s.startsWith('drafts.') ? s.substring('drafts.'.length) : s;\n\ninterface Params {\n  typeName: string;\n  pageSize: number;\n  selectedColumns: Set<string>;\n  searchField: string | null;\n  orderColumn: ColumnOrder;\n}\n\nfunction usePaginatedClient({\n  typeName,\n  pageSize,\n  selectedColumns,\n  searchField,\n  orderColumn,\n}: Params) {\n  // the loading statuses are a set of strings\n  // when it's empty, nothing is loading\n  const [loadingStatuses, setLoadingStatuses] = useState(new Set<string>());\n  const loading = loadingStatuses.size > 0;\n\n  // stores the state for the total amount of de-duped documents\n  const [total, setTotal] = useState(0);\n\n  // uses the pageSize to calculate the total pages\n  const totalPages = Math.ceil(total / pageSize);\n\n  // stores the current set of active IDs on the page.\n  // these are fed into the `useEffect` that creates the `results` state\n  const [pageIds, setPageIds] = useState<string[]>([]);\n\n  // the current page. changing this will trigger a re-fetch of the `pageIds`\n  const [page, setPage] = useState(0);\n\n  // the current result set\n  const [results, setResults] = useState<any[]>([]);\n\n  // used to force refresh. TODO: consider refactoring this\n  const [refreshId, setRefreshId] = useState(nanoid());\n  const refresh = useCallback(() => setRefreshId(nanoid()), []);\n\n  const [userQuery, setUserQuery] = useState('');\n  // Builds the string to use when a custom filter has been entered\n  const searchQuery =\n    userQuery.length && searchField\n      ? ` && ${searchField} match \"${userQuery}*\"`\n      : '';\n\n  // Implements ordering from the <th> buttons\n  const orderQuery = orderColumn\n    ? `| order(${orderColumn.key} ${orderColumn.direction})`\n    : ``;\n\n  // get total count\n  useEffect(() => {\n    let canceled = false;\n\n    async function getTotalCount() {\n      // add the `total_count` to the loading statuses\n      setLoadingStatuses((prev) => {\n        const next = new Set(prev);\n        next.add('total_count');\n        return next;\n      });\n\n      // fetch all the draft IDs in this document type\n      const draftIds = await client.fetch<string[]>(\n        `*[_type == $typeName && _id in path(\"drafts.**\") ${searchQuery}]._id`,\n        { typeName }\n      );\n\n      const { draftsWithPublishedVersion, notDraftCount } = await client.fetch<{\n        // find all the documents with a corresponding published version\n        draftsWithPublishedVersion: string[];\n        // and also grab a count of how many documents aren't drafts\n        notDraftCount: number;\n      }>(\n        `{\n          \"draftsWithPublishedVersion\": *[_type == $typeName && _id in $ids ${searchQuery}]._id,\n          \"notDraftCount\": count(*[_type == $typeName && !(_id in path(\"drafts.**\")) ${searchQuery}]),\n        }`,\n        { ids: draftIds.map(removeDraftPrefix), typeName }\n      );\n\n      // the calculation for the total is then:\n      const total =\n        draftIds.length - draftsWithPublishedVersion.length + notDraftCount;\n\n      // early return on canceled\n      if (canceled) return;\n\n      // remove `total_count` from the loading statuses\n      setLoadingStatuses((prev) => {\n        const next = new Set(prev);\n        next.delete('total_count');\n        return next;\n      });\n\n      setTotal(total);\n    }\n\n    getTotalCount().catch((e) => {\n      // TODO: proper error handling\n      console.warn(e);\n    });\n\n    return () => {\n      canceled = true;\n    };\n  }, [typeName, refreshId, searchQuery]);\n\n  // get page IDs\n  useEffect(() => {\n    const getPageIds = async (targetPage: number) => {\n      // add the `page_ids` to the loading statuses\n      setLoadingStatuses((prev) => {\n        const next = new Set(prev);\n        next.add('page_ids');\n        return next;\n      });\n\n      // query for all the draft IDs\n      const draftIds = await client.fetch<string[]>(\n        `*[_type == $typeName && _id in path(\"drafts.**\") ${searchQuery}]._id`,\n        { typeName }\n      );\n\n      // create a set of drafts IDs.\n      // these IDs are used to determine whether or a not a published version\n      // should be ignored in order to favor the current draft version\n      const drafts = draftIds.reduce((set, next) => {\n        set.add(removeDraftPrefix(next));\n        return set;\n      }, new Set<string>());\n\n      // this is a recursive function that will call itself until it reaches the\n      // desired page.\n      //\n      // TODO: this implementation gets slower with each new page. pagination\n      // is relatively challenging in this context since there could or could\n      // not be a draft. The published version should be ignored to prefer the\n      // draft which makes it hard to know where the current page ends and the\n      // next one begins\n      const getPage = async (start = 0, page = 0): Promise<string[]> => {\n        const end =\n          start +\n          // note: we fetch twice the given page size to consider the cases\n          // where we have to remove half the result set in the case of\n          // duplicate `draft.` document\n          pageSize * 2;\n\n        const pageIds = await client.fetch<string[]>(\n          `*[_type == $typeName ${searchQuery}]${orderQuery}[$start...$end]._id`,\n          { typeName, start, end }\n        );\n\n        const filteredIds = pageIds\n          .map((id, index) => ({ id, index: start + index }))\n          .filter(({ id }) => {\n            // if the id is a draft ID, we want to keep it\n            if (id.startsWith('drafts.')) return true;\n\n            // if the published _id exists in `drafts`, then there exists a draft\n            // version of the current document and we should prefer that over the\n            // published version\n            if (drafts.has(id)) return false;\n\n            return true;\n          })\n          .slice(0, pageSize);\n\n        const ids = filteredIds.map((i) => i.id).map(removeDraftPrefix);\n        if (page >= targetPage) return ids;\n\n        const last = filteredIds[filteredIds.length - 1];\n        if (!last) return [];\n\n        return await getPage(last.index + 1, page + 1);\n      };\n\n      const ids = await getPage();\n\n      // delete the `page_ids` from the loading statuses\n      setLoadingStatuses((prev) => {\n        const next = new Set(prev);\n        next.delete('page_ids');\n        return next;\n      });\n\n      return ids;\n    };\n\n    getPageIds(page)\n      .then(setPageIds)\n      .catch((e) => {\n        // TODO: proper error handling\n        console.warn(e);\n      });\n  }, [page, pageSize, typeName, refreshId, searchQuery, orderQuery]);\n\n  // get results\n  useEffect(() => {\n    // take all the input IDs and duplicate them with the prefix `drafts.`\n    const ids = pageIds.map((id) => [id, `drafts.${id}`]).flat();\n    // Inner-object selected keys need to be shaped in the query\n    const columnKeys = Array.from(selectedColumns)\n      .map((key: string) => (key.includes('.') ? `\"${key}\": ${key}` : key))\n      .join(', ');\n\n    // these IDs will go into a specific query. if the draft or published\n    // version happens to not exist, that's okay.\n    const query = `*[_id in $ids ${searchQuery}]${orderQuery}{ _id, _type, ${columnKeys} }`;\n    // console.log(query);\n\n    async function getResults() {\n      // add the `results` to the loading statuses\n      setLoadingStatuses((prev) => {\n        const next = new Set(prev);\n        next.add('results');\n        return next;\n      });\n\n      // create a dictionary of indexes where the keys are the IDs and the\n      // values are the current index. this dictionary will be used to sort the\n      // documents in their original order\n      const indexes = pageIds.reduce<{ [id: string]: number }>(\n        (acc, id, index) => {\n          acc[id] = index;\n          return acc;\n        },\n        {}\n      );\n\n      const results = await client.fetch<any[]>(query, { ids });\n\n      // reduce the results into an accumulator by their normalized ID.\n      // if there is a draft version, prefer the draft over the published\n      const reducedResults = Object.values(\n        results.reduce<{ [id: string]: any }>((acc, next) => {\n          const id = removeDraftPrefix(next._id);\n          const current = acc[id];\n\n          const currentIsDraft = current?._id.startsWith('drafts.');\n          const nextIsDraft = next?._id.startsWith('drafts.');\n\n          const status =\n            current && next\n              ? 'draft'\n              : currentIsDraft || nextIsDraft\n              ? 'unpublished'\n              : 'published';\n\n          acc[id] = currentIsDraft ? current : next;\n          acc[id]._status = status;\n          acc[id]._normalizedId = id;\n\n          return acc;\n        }, {})\n      );\n\n      // delete the `results` from the loading statuses\n      setLoadingStatuses((prev) => {\n        const next = new Set(prev);\n        next.delete('results');\n        return next;\n      });\n\n      setResults(\n        reducedResults\n          .slice()\n          // sort the accumulated version by their original index\n          .sort(\n            (a, b) =>\n              indexes[removeDraftPrefix(a._id)] -\n              indexes[removeDraftPrefix(b._id)]\n          )\n      );\n    }\n\n    // TODO: consider error handling\n    getResults().catch((e) => {\n      console.warn(e);\n    });\n\n    // TODO: add error handler\n    // Listen to changes across the entire type\n    const typeQuery = `*[_type == $typeName]`;\n    const subscription = client\n      .listen(typeQuery, { typeName })\n      .pipe(\n        tap((result) => {\n          // Add a new id to the array if a new doc was created\n          const docId = result.documentId.replace('drafts.', '');\n\n          if (!pageIds.includes(docId)) {\n            setPageIds([...pageIds, docId]);\n          }\n\n          // add the `results` to the loading statuses\n          setLoadingStatuses((prev) => {\n            const next = new Set(prev);\n            next.add('results');\n            return next;\n          });\n        }),\n        debounceTime(1000)\n      )\n      .subscribe(getResults);\n\n    return () => subscription.unsubscribe();\n  }, [pageIds, selectedColumns, refreshId, searchQuery, orderQuery]);\n\n  // reset page\n  useEffect(() => {\n    // if the page is greater than the total pages then reset the page.\n    // this could occur if the page size changed\n    if (page >= totalPages) {\n      setPage(0);\n    }\n  }, [page, totalPages]);\n\n  return {\n    results,\n    page,\n    totalPages,\n    setPage,\n    loading,\n    pageIds,\n    total,\n    refresh,\n    setUserQuery,\n  };\n}\n\nexport default usePaginatedClient;\n","import { SelectableField } from '../column-selector';\n\nfunction getInnerFields(\n  childFields: any[],\n  parentPath: string,\n  currentLevel = 1\n): SelectableField[] {\n  return childFields.reduce((acc: any, cur: any) => {\n    const fieldPath = parentPath + '.' + cur.name;\n    const level = currentLevel + 1;\n\n    const child = {\n      field: cur,\n      fieldPath,\n      title: cur.type.title,\n      level,\n      sortable: true,\n    };\n\n    if (cur.type?.fields?.length) {\n      child.sortable = false;\n      const children = cur.type.fields;\n      const innerFields = getInnerFields(children, fieldPath, level);\n\n      if (innerFields.length) {\n        return [...acc, child, ...innerFields];\n      }\n    }\n\n    return [...acc, child];\n  }, []);\n}\n\nexport function getSelectableFields(\n  fields: Array<any> = []\n): SelectableField[] {\n  if (!fields.length) return [];\n\n  const selectable = fields.reduce((acc: any, cur: any) => {\n    const fieldPath: string = cur.name;\n    const title: string = cur.type.title;\n    const parent = { field: cur, fieldPath, title, level: 0, sortable: true };\n\n    if (cur.type?.fields?.length) {\n      parent.sortable = false;\n      const children = cur.type.fields;\n      const innerFields = getInnerFields(children, fieldPath, 1);\n\n      if (innerFields.length) {\n        return [...acc, parent, ...innerFields];\n      }\n    }\n\n    return [...acc, parent];\n  }, []);\n\n  return selectable;\n}\n","import React, { useMemo, useState, useEffect } from 'react';\nimport { Dialog, Checkbox, Button } from '@sanity/ui';\nimport { nanoid } from 'nanoid';\nimport schema from 'part:@sanity/base/schema';\nimport styles from './styles.module.css';\nimport { getSelectableFields } from '../helpers/get-selectable-fields';\n\ninterface Props {\n  typeName: string;\n  open: boolean;\n  onClose: () => void;\n  onSelect: (selectedColumns: Set<string>) => void;\n  initiallySelectedColumns: Set<string>;\n}\n\nexport interface SelectableField {\n  field: any;\n  fieldPath: string;\n  title: string;\n  level: number;\n  sortable: boolean;\n}\n\nfunction ColumnSelector({\n  open,\n  onClose,\n  onSelect,\n  typeName,\n  initiallySelectedColumns,\n}: Props) {\n  const schemaType = schema.get(typeName);\n  const [selectedColumns, setSelectedColumns] = useState(\n    initiallySelectedColumns\n  );\n\n  useEffect(() => {\n    if (open) {\n      setSelectedColumns(initiallySelectedColumns);\n    }\n  }, [open, initiallySelectedColumns]);\n\n  const dialogId = useMemo(() => nanoid(), []);\n\n  function handleSelect(fieldPath: string) {\n    setSelectedColumns((set) => {\n      const nextSet = new Set(set);\n\n      if (set.has(fieldPath)) {\n        nextSet.delete(fieldPath);\n      } else {\n        nextSet.add(fieldPath);\n      }\n\n      return nextSet;\n    });\n  }\n\n  const selectableFields = useMemo(\n    () => getSelectableFields(schemaType.fields),\n    [schemaType.fields]\n  );\n\n  if (!open) {\n    return null;\n  }\n\n  return (\n    <Dialog\n      className={styles.dialog}\n      header={<>Select Columns</>}\n      footer={\n        <div className={styles.footer}>\n          <Button mode=\"ghost\" text=\"Cancel\" onClick={onClose} />\n          <Button\n            tone=\"primary\"\n            text=\"Apply\"\n            onClick={() => {\n              onClose();\n              onSelect(selectedColumns);\n            }}\n          />\n        </div>\n      }\n      id={dialogId}\n      onClose={onClose}\n      zOffset={100000}\n    >\n      <ul className={styles.list}>\n        <li>\n          <label className={styles.label}>\n            <Checkbox\n              className={styles.checkbox}\n              checked={selectedColumns.has('_updatedAt')}\n              onChange={() => handleSelect('_updatedAt')}\n            />\n            <span>Updated At</span>\n          </label>\n        </li>\n        {selectableFields.map(\n          ({ fieldPath, title, level }: SelectableField) => (\n            <li key={fieldPath} style={{ marginLeft: level * 10 }}>\n              <label className={styles.label}>\n                <Checkbox\n                  className={styles.checkbox}\n                  checked={selectedColumns.has(fieldPath)}\n                  onChange={() => handleSelect(fieldPath)}\n                />\n                <span>{title}</span>\n              </label>\n            </li>\n          )\n        )}\n      </ul>\n    </Dialog>\n  );\n}\n\nexport default ColumnSelector;\n","/**\n * Converts portable text to strings.\n *\n * Copied and pasted from:\n * https://www.sanity.io/docs/presenting-block-text#plain-text-serialization-ac67a867dd69\n */\nfunction blockContentToString(blocks: any[] = []) {\n  return (\n    blocks\n      // loop through each block\n      .map((block) => {\n        // if it's not a text block with children,\n        // return nothing\n        if (block._type !== 'block' || !block.children) {\n          return '';\n        }\n\n        // loop through the children spans, and join the\n        // text strings\n        return block.children.map((child: any) => child.text).join('');\n      })\n      // join the paragraphs leaving split by two linebreaks\n      .join('\\n\\n')\n  );\n}\n\nexport default blockContentToString;\n","import React from 'react';\nimport SanityPreview from 'part:@sanity/base/preview';\nimport blockContentToString from '../block-content-to-string';\nimport styles from './styles.module.css';\nimport { Text } from '@sanity/ui';\n\ninterface Props {\n  field: any;\n  fieldPath: string;\n  value: any;\n}\n\nfunction Cell({ field, fieldPath, value }: Props) {\n  switch (field.type.name) {\n    // Hacky! Format _just_ the updatedAt field\n    case '_updatedAt': {\n      return (\n        <td key={fieldPath}>\n          <Text size={1}>{new Date(value).toLocaleString()}</Text>\n        </td>\n      );\n    }\n    // The rest of these types are legit!\n    case 'string':\n    case 'number': {\n      return <td key={fieldPath}>{value}</td>;\n    }\n    case 'blockContent': {\n      const blockContentAsString = blockContentToString(value);\n\n      return (\n        <td\n          title={blockContentAsString}\n          key={fieldPath}\n          className={styles.blockContent}\n        >\n          {blockContentAsString}\n        </td>\n      );\n    }\n    case 'datetime': {\n      return (\n        <td key={fieldPath}>{value ? new Date(value).toLocaleString() : ''}</td>\n      );\n    }\n    case 'date': {\n      return (\n        <td key={fieldPath}>\n          {value ? new Date(value).toLocaleDateString() : ''}\n        </td>\n      );\n    }\n    case 'array': {\n      return (\n        <td key={fieldPath}>\n          {value?.length || 0} item\n          {value?.length === 1 ? '' : 's'}\n        </td>\n      );\n    }\n    default: {\n      return (\n        <td key={fieldPath}>\n          {value && (\n            <SanityPreview type={field.type} layout=\"default\" value={value} />\n          )}\n        </td>\n      );\n    }\n  }\n}\n\nexport default Cell;\n","import { TextInput, Select, Card, Text, Box } from '@sanity/ui';\nimport React, { useEffect, useState } from 'react';\nimport styles from './styles.module.css';\n\ninterface Props {\n  fieldsToChooseFrom: Array<{ name: string; title: string }>;\n  currentField: string | null;\n  onSearch: (userQuery: string) => void;\n  onFieldSelected: (field: string) => void;\n}\n\nfunction SearchField({\n  currentField,\n  fieldsToChooseFrom,\n  onSearch,\n  onFieldSelected,\n}: Props) {\n  const [userQuery, setUserQuery] = useState('');\n\n  useEffect(() => {\n    if (!userQuery.length) {\n      onSearch('');\n      return;\n    }\n\n    const timeout = setTimeout(() => {\n      onSearch(userQuery);\n    }, 700);\n\n    return () => clearTimeout(timeout);\n  }, [userQuery, onSearch]);\n\n  if (!fieldsToChooseFrom?.length) {\n    return (\n      <Box padding={3}>\n        <Card tone=\"caution\" padding={3} radius={2} shadow={1}>\n          <Text>No Searchable Fields to select from</Text>\n        </Card>\n      </Box>\n    );\n  }\n\n  return (\n    <form onSubmit={(e) => e.preventDefault()} className={styles.searchForm}>\n      <TextInput\n        onChange={(event) => setUserQuery(event.currentTarget.value)}\n        placeholder=\"Search\"\n        value={userQuery}\n      />\n\n      <div className={styles.searchSelect}>\n        <Select\n          value={currentField || undefined}\n          onChange={(e) => onFieldSelected(e.currentTarget.value)}\n        >\n          {fieldsToChooseFrom.map((field) => (\n            <option key={field.name} value={field.name}>\n              {field.title}\n            </option>\n          ))}\n        </Select>\n      </div>\n    </form>\n  );\n}\n\nexport default SearchField;\n","import { useState, useEffect } from 'react';\n\nexport function useStickyStateSet(defaultValue: Set<string>, key: string) {\n  const [value, setValue] = useState(() => {\n    const stickyValue = window.localStorage.getItem(key);\n    return stickyValue !== null\n      ? new Set<string>(JSON.parse(stickyValue))\n      : defaultValue;\n  });\n\n  useEffect(() => {\n    if (value) {\n      window.localStorage.setItem(key, JSON.stringify(Array.from(value)));\n    }\n  }, [key, value]);\n\n  return [value, setValue] as const;\n}\n","import { useState, useEffect } from 'react';\n\nexport interface ColumnOrder {\n  key: string;\n  direction: string;\n}\n\nexport function useStickyStateOrder(defaultValue: ColumnOrder, key: string) {\n  const [value, setValue] = useState(() => {\n    const stickyValue = window.localStorage.getItem(key);\n    return stickyValue !== null ? JSON.parse(stickyValue) : defaultValue;\n  });\n\n  useEffect(() => {\n    if (value) {\n      window.localStorage.setItem(key, JSON.stringify(value));\n    }\n  }, [key, value]);\n\n  return [value, setValue];\n}\n","import React from 'react';\nimport { Label, Flex } from '@sanity/ui';\nimport { ChevronDownIcon, ChevronUpIcon, SortIcon } from '@sanity/icons';\n\nimport { SelectableField } from '../column-selector/index';\n\nexport default function TableHeaderInner({\n  field,\n  orderColumn,\n}: {\n  field: SelectableField;\n  orderColumn: any;\n}) {\n  return (\n    <Flex align=\"center\">\n      <Label muted={!field.sortable}>{field.title}</Label>\n      {field.sortable && (\n        <>\n          {orderColumn.key === field.fieldPath ? (\n            <>\n              {orderColumn.direction === 'asc' ? (\n                <ChevronDownIcon />\n              ) : (\n                <ChevronUpIcon />\n              )}\n            </>\n          ) : (\n            <>\n              <SortIcon />\n            </>\n          )}\n        </>\n      )}\n    </Flex>\n  );\n}\n","import React, { useMemo, useEffect, useState, useRef } from 'react';\nimport S from '@sanity/desk-tool/structure-builder';\nimport { get } from 'lodash';\nimport classNames from 'classnames';\nimport schema from 'part:@sanity/base/schema';\nimport SanityPreview from 'part:@sanity/base/preview';\nimport useRouter, { RouterProvider } from './use-router';\nimport BulkActionsMenu from './bulk-actions-menu';\nimport createEmitter from './create-emitter';\nimport usePaginatedClient from './use-paginated-client';\nimport ColumnSelector from './column-selector';\nimport Cell from './cell';\nimport {\n  Card,\n  Box,\n  Text,\n  Label,\n  Button,\n  Select,\n  MenuButton,\n  Menu,\n  MenuItem,\n  Checkbox,\n  Badge,\n  Flex,\n} from '@sanity/ui';\nimport {\n  EllipsisVerticalIcon,\n  ArrowRightIcon,\n  ChevronLeftIcon,\n  ChevronRightIcon,\n  SyncIcon,\n  SpinnerIcon,\n  ControlsIcon,\n  SearchIcon,\n} from '@sanity/icons';\nimport styles from './styles.module.css';\nimport SearchField from './search-field';\nimport { useStickyStateSet } from './hooks/use-sticky-state-set';\nimport { useStickyStateOrder } from './hooks/use-sticky-state-order';\nimport { getSelectableFields } from './helpers/get-selectable-fields';\nimport { SelectableField } from './column-selector/index';\nimport TableHeaderInner from './table-header-inner';\n\nfunction parentHasClass(el: HTMLElement | null, className: string): boolean {\n  if (!el) return false;\n  if (el.classList.contains(className)) return true;\n  return parentHasClass(el.parentElement, className);\n}\n\nfunction createSuperPane(typeName: string) {\n  const schemaType = schema.get(typeName);\n  const selectColumns = createEmitter();\n  const refresh = createEmitter();\n  const search = createEmitter();\n\n  const fieldsToChooseFrom = (schemaType.fields as any[])\n    .filter((field: any) => field?.type?.jsonType === 'string')\n    .map((field: any) => ({\n      name: field.name as string,\n      title: field.type.title as string,\n    }));\n\n  const rowsPerPage = [25, 50, 100, 250, 500];\n  const orderColumnDefault = { key: '', direction: 'asc' };\n\n  function SuperPane() {\n    const router = useRouter();\n    const [pageSize, setPageSize] = useState(rowsPerPage[0]);\n    const [columnSelectorOpen, setColumnSelectorOpen] = useState(false);\n    const [selectedColumns, setSelectedColumns] = useStickyStateSet(\n      new Set<string>(),\n      `super-pane-${typeName}-selected-columns`\n    );\n    const [orderColumn, setOrderColumn] = useStickyStateOrder(\n      orderColumnDefault,\n      `super-pane-${typeName}-order-column`\n    );\n    const [selectedIds, setSelectedIds] = useState(new Set<string>());\n    const [selectedSearchField, setSelectedSearchField] = useState<\n      string | null\n    >(fieldsToChooseFrom?.length ? fieldsToChooseFrom[0]?.name : null);\n    const [showSearch, setShowSearch] = useState(false);\n    const containerRef = useRef<HTMLDivElement>(null);\n\n    const client = usePaginatedClient({\n      typeName,\n      pageSize,\n      selectedColumns,\n      searchField: selectedSearchField,\n      orderColumn,\n    });\n\n    useEffect(() => {\n      return selectColumns.subscribe(() => setColumnSelectorOpen(true));\n    }, []);\n\n    useEffect(() => {\n      return refresh.subscribe(client.refresh);\n    }, [client.refresh]);\n\n    useEffect(() => {\n      return search.subscribe(() => setShowSearch((prev) => !prev));\n    }, []);\n\n    const defaultFields = selectedColumns.has('_updatedAt')\n      ? [\n          {\n            fieldPath: '_updatedAt',\n            title: 'Updated At',\n            field: { type: { name: '_updatedAt' } },\n            level: 0,\n            sortable: true,\n          },\n        ]\n      : [];\n    const selectableFields = useMemo(\n      () =>\n        getSelectableFields(schemaType.fields).filter((field: any) =>\n          selectedColumns.has(field.fieldPath)\n        ),\n      [selectedColumns]\n    );\n    const fields = [...defaultFields, ...selectableFields];\n\n    const atLeastOneSelected = client.results.some((i) =>\n      selectedIds.has(i._normalizedId)\n    );\n\n    const allSelected = client.results.every((i) =>\n      selectedIds.has(i._normalizedId)\n    );\n\n    function handleOrder(key: string) {\n      // Reset\n      if (orderColumn.key === key && orderColumn.direction === 'desc') {\n        return setOrderColumn(orderColumnDefault);\n      }\n\n      // Set updated key and/or direction\n      setOrderColumn({\n        key,\n        direction:\n          orderColumn?.direction === 'asc' && orderColumn.key === key\n            ? 'desc'\n            : 'asc',\n      });\n    }\n\n    return (\n      <>\n        <div ref={containerRef} className={styles.container}>\n          <Card\n            padding={3}\n            tone={selectedIds.size < 1 ? `transparent` : `positive`}\n            shadow={1}\n          >\n            <Flex align=\"center\">\n              <Button\n                disabled={selectedIds.size < 1}\n                onClick={() => setSelectedIds(new Set())}\n                fontSize={1}\n                paddingY={1}\n                paddingX={2}\n              >\n                Clear\n              </Button>\n              <Box paddingX={2} style={{ marginRight: 'auto' }}>\n                <Text size={1} weight=\"bold\">\n                  {selectedIds.size} item{selectedIds.size === 1 ? '' : 's'}{' '}\n                  selected\n                </Text>\n              </Box>\n\n              <BulkActionsMenu\n                disabled={selectedIds.size < 1}\n                className={styles.clearButton}\n                selectedIds={selectedIds}\n                typeName={typeName}\n                onDelete={() => {\n                  setSelectedIds(new Set());\n                  client.setPage(0);\n                  client.refresh();\n                }}\n              />\n            </Flex>\n          </Card>\n          {showSearch && (\n            <div>\n              <SearchField\n                currentField={selectedSearchField}\n                fieldsToChooseFrom={fieldsToChooseFrom}\n                onSearch={client.setUserQuery}\n                onFieldSelected={setSelectedSearchField}\n              />\n            </div>\n          )}\n          <div\n            className={classNames(styles.loadingOverlay, {\n              [styles.loadingOverlayActive]: client.loading,\n            })}\n          >\n            <SpinnerIcon className={styles.loadingSpinner} />\n          </div>\n          <div className={styles.tableWrapper}>\n            <table className={styles.table}>\n              <thead className={styles.thead}>\n                <tr>\n                  <th\n                    className={classNames(styles.checkboxCell, 'prevent-nav')}\n                  >\n                    <input\n                      type=\"checkbox\"\n                      className={styles.hiddenCheckbox}\n                      onChange={() => {\n                        setSelectedIds((set) => {\n                          const nextSet = new Set(set);\n                          if (allSelected) {\n                            for (const result of client.results || []) {\n                              nextSet.delete(result._normalizedId);\n                            }\n                          } else {\n                            for (const result of client.results || []) {\n                              nextSet.add(result._normalizedId);\n                            }\n                          }\n\n                          return nextSet;\n                        });\n                      }}\n                      checked={allSelected}\n                    />\n                    <div aria-hidden=\"true\" className={styles.checkboxFacade}>\n                      <Checkbox\n                        tabIndex={-1}\n                        checked={atLeastOneSelected}\n                        indeterminate={atLeastOneSelected && !allSelected}\n                      />\n                    </div>\n                  </th>\n                  <th style={{ paddingLeft: 0 }}>\n                    <Label>{schemaType.title}</Label>\n                  </th>\n                  <th>\n                    <Label>Status</Label>\n                  </th>\n                  {fields.map((field: SelectableField) => (\n                    <th key={field.fieldPath}>\n                      {field.sortable ? (\n                        <Button\n                          mode={\n                            orderColumn.key !== field.fieldPath\n                              ? 'bleed'\n                              : 'default'\n                          }\n                          tone={\n                            orderColumn.key === field.fieldPath\n                              ? 'primary'\n                              : 'default'\n                          }\n                          padding={1}\n                          onClick={() => handleOrder(field.fieldPath)}\n                        >\n                          <TableHeaderInner\n                            field={field}\n                            orderColumn={orderColumn}\n                          />\n                        </Button>\n                      ) : (\n                        <TableHeaderInner\n                          field={field}\n                          orderColumn={orderColumn}\n                        />\n                      )}\n                    </th>\n                  ))}\n                  <th className={styles.optionsCell} aria-label=\"Options\" />\n                </tr>\n              </thead>\n\n              <tbody className={styles.tbody}>\n                {client.results.map((item) => {\n                  const handleNavigation = () => {\n                    router.navigateUrl(\n                      router.resolveIntentLink('edit', {\n                        id: item._id,\n                        type: item._type,\n                      })\n                    );\n                  };\n\n                  return (\n                    <tr\n                      key={item._normalizedId}\n                      onClick={(e) => {\n                        // prevent the menu button from causing a navigation\n                        if (\n                          parentHasClass(e.target as HTMLElement, 'prevent-nav')\n                        ) {\n                          return;\n                        }\n\n                        handleNavigation();\n                      }}\n                    >\n                      <td\n                        className={classNames(\n                          styles.checkboxCell,\n                          'prevent-nav'\n                        )}\n                      >\n                        <input\n                          type=\"checkbox\"\n                          className={styles.hiddenCheckbox}\n                          onChange={(e) => {\n                            setSelectedIds((set) => {\n                              const nextSet = new Set(set);\n\n                              if (e.currentTarget.checked) {\n                                nextSet.add(item._normalizedId);\n                              } else {\n                                nextSet.delete(item._normalizedId);\n                              }\n\n                              return nextSet;\n                            });\n                          }}\n                          checked={selectedIds.has(item._normalizedId)}\n                        />\n                        <div\n                          aria-hidden=\"true\"\n                          className={styles.checkboxFacade}\n                        >\n                          <Checkbox\n                            tabIndex={-1}\n                            checked={selectedIds.has(item._normalizedId)}\n                          />\n                        </div>\n                      </td>\n                      <td className={styles.titleCell}>\n                        <SanityPreview\n                          type={schemaType}\n                          layout=\"default\"\n                          value={item}\n                        />\n                      </td>\n                      <td>\n                        <Badge\n                          fontSize={0}\n                          tone={\n                            item._status === 'published'\n                              ? 'positive'\n                              : item._status === 'unpublished'\n                              ? 'caution'\n                              : 'default'\n                          }\n                        >\n                          {item._status}\n                        </Badge>\n                      </td>\n\n                      {fields.map((field: SelectableField) => (\n                        <Cell\n                          field={field.field}\n                          fieldPath={field.fieldPath}\n                          value={get(item, field.fieldPath)}\n                        />\n                      ))}\n\n                      <td className={styles.optionsCell}>\n                        <MenuButton\n                          button={\n                            <Button\n                              className=\"prevent-nav\"\n                              icon={EllipsisVerticalIcon}\n                              title=\"Options\"\n                              mode=\"bleed\"\n                            />\n                          }\n                          portal\n                          id=\"prevent-nav-example\"\n                          menu={\n                            <Menu className={styles.menu}>\n                              <MenuItem\n                                className=\"prevent-nav\"\n                                text=\"Open\"\n                                icon={ArrowRightIcon}\n                                onClick={handleNavigation}\n                              />\n                              {/* TODO */}\n                              {/* <MenuItem\n                                className=\"prevent-nav\"\n                                text=\"Discard changes\"\n                              />\n                              <MenuItem\n                                className=\"prevent-nav\"\n                                text=\"Unpublish\"\n                              />\n                              <MenuDivider />\n                              <MenuItem\n                                className=\"prevent-nav\"\n                                tone=\"critical\"\n                                icon={TrashIcon}\n                                text=\"Delete\"\n                              /> */}\n                            </Menu>\n                          }\n                          placement=\"left\"\n                        />\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n\n          <Card\n            borderTop\n            style={{ position: `absolute`, bottom: 0, width: `100%` }}\n            padding={3}\n          >\n            <Flex align=\"center\" gap={2}>\n              <Flex align=\"center\" gap={2}>\n                <Label style={{ whiteSpace: `nowrap` }}>Rows Per Page</Label>\n                <Select\n                  value={pageSize}\n                  onChange={(e) =>\n                    setPageSize(parseInt(e.currentTarget.value, 10))\n                  }\n                >\n                  {rowsPerPage.map((count) => (\n                    <option key={count} value={count}>\n                      {count}\n                    </option>\n                  ))}\n                </Select>\n              </Flex>\n\n              <Box flex={1}>\n                <Flex align=\"center\" justify=\"flex-end\" gap={2}>\n                  <Button\n                    fontSize={1}\n                    disabled={client.page === 0}\n                    onClick={() => client.setPage(client.page - 1)}\n                    icon={ChevronLeftIcon}\n                    title=\"Previous page\"\n                    mode=\"bleed\"\n                  />\n                  <Label>\n                    {client.totalPages === 0 ? 0 : client.page + 1}&nbsp;/&nbsp;\n                    {client.totalPages}\n                  </Label>\n                  <Button\n                    fontSize={1}\n                    disabled={client.page >= client.totalPages - 1}\n                    onClick={() => client.setPage(client.page + 1)}\n                    icon={ChevronRightIcon}\n                    title=\"Next Page\"\n                    mode=\"bleed\"\n                  />\n                </Flex>\n              </Box>\n            </Flex>\n          </Card>\n        </div>\n\n        <ColumnSelector\n          open={columnSelectorOpen}\n          // open={true}\n          onClose={() => setColumnSelectorOpen(false)}\n          typeName={typeName}\n          initiallySelectedColumns={selectedColumns}\n          onSelect={setSelectedColumns}\n        />\n      </>\n    );\n  }\n\n  function SuperPaneWrapper() {\n    return (\n      <RouterProvider>\n        <SuperPane />\n      </RouterProvider>\n    );\n  }\n\n  return Object.assign(S.documentTypeList(typeName).serialize(), {\n    type: 'component',\n    component: SuperPaneWrapper,\n    menuItems: S.documentTypeList(typeName)\n      .menuItems(\n        [\n          S.menuItem().title('Refresh').icon(SyncIcon).action(refresh.notify),\n          S.menuItem().title('Search').icon(SearchIcon).action(search.notify),\n          S.menuItem()\n            .title('Select Columns')\n            .icon(ControlsIcon)\n            .action(selectColumns.notify),\n        ].filter(Boolean)\n      )\n      .serialize().menuItems,\n  });\n}\n\nexport default createSuperPane;\n"],"names":["RouterContext","createContext","internalRouterContextTypeCheck","context","propName","componentName","__internalRouter","Error","RouterProvider","React","Component","render","router","props","children","useRouter","useContext","styleInject","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","client","_client","ErroredDocuments","e","schemaType","idsWithErrors","details","items","map","item","error","id","length","plural","_id","_type","removeDraftPrefix","s","startsWith","substring","BulkActionsMenu","disabled","className","selectedIds","typeName","onDelete","buttonId","useMemo","nanoid","schema","get","toast","useToast","dialogId","dialogMode","setDialogMode","useState","loading","setLoading","handleDiscardChanges","ids","fetch","Array","from","flat","idSet","reduce","set","add","Set","draftIdsThatAlsoHavePublishedIds","filter","has","t","transaction","delete","commit","console","warn","push","title","description","status","closable","duration","handleUnpublish","publishedDocuments","publishedDocument","createIfNotExists","_updatedAt","Date","toISOString","handlePublish","draftDocuments","draftDocument","createOrReplace","handleDelete","idsToDelete","textAlign","ResetIcon","UnpublishIcon","PublishIcon","TrashIcon","styles","footer","content","size","createEmitter","listeners","subscribe","listener","unsubscribe","notify","sanityClient","withConfig","apiVersion","usePaginatedClient","pageSize","selectedColumns","searchField","orderColumn","loadingStatuses","setLoadingStatuses","total","setTotal","totalPages","Math","ceil","pageIds","setPageIds","page","setPage","results","setResults","refreshId","setRefreshId","refresh","useCallback","userQuery","setUserQuery","searchQuery","orderQuery","key","direction","useEffect","canceled","getTotalCount","prev","next","draftIds","draftsWithPublishedVersion","notDraftCount","catch","getPageIds","targetPage","drafts","getPage","start","end","filteredIds","index","slice","i","last","then","columnKeys","includes","join","query","getResults","indexes","acc","reducedResults","Object","values","current","currentIsDraft","nextIsDraft","_status","_normalizedId","sort","a","b","typeQuery","subscription","listen","pipe","tap","result","docId","documentId","replace","debounceTime","getInnerFields","childFields","parentPath","currentLevel","cur","fieldPath","name","level","child","field","sortable","fields","innerFields","getSelectableFields","selectable","parent","ColumnSelector","open","onClose","onSelect","initiallySelectedColumns","setSelectedColumns","handleSelect","nextSet","selectableFields","dialog","list","label","checkbox","marginLeft","blockContentToString","blocks","block","text","Cell","value","toLocaleString","blockContentAsString","blockContent","toLocaleDateString","SearchField","currentField","fieldsToChooseFrom","onSearch","onFieldSelected","timeout","setTimeout","clearTimeout","preventDefault","searchForm","event","currentTarget","searchSelect","undefined","useStickyStateSet","defaultValue","setValue","stickyValue","window","localStorage","getItem","JSON","parse","setItem","stringify","useStickyStateOrder","TableHeaderInner","parentHasClass","el","classList","contains","parentElement","createSuperPane","selectColumns","search","jsonType","rowsPerPage","orderColumnDefault","SuperPane","setPageSize","columnSelectorOpen","setColumnSelectorOpen","setOrderColumn","setSelectedIds","selectedSearchField","setSelectedSearchField","showSearch","setShowSearch","containerRef","useRef","defaultFields","atLeastOneSelected","some","allSelected","every","handleOrder","container","marginRight","clearButton","classNames","loadingOverlay","loadingOverlayActive","loadingSpinner","tableWrapper","table","thead","checkboxCell","hiddenCheckbox","checkboxFacade","paddingLeft","optionsCell","tbody","handleNavigation","navigateUrl","resolveIntentLink","target","checked","titleCell","EllipsisVerticalIcon","menu","ArrowRightIcon","position","bottom","width","whiteSpace","parseInt","count","ChevronLeftIcon","ChevronRightIcon","SuperPaneWrapper","assign","S","documentTypeList","serialize","component","menuItems","menuItem","icon","SyncIcon","action","SearchIcon","ControlsIcon","Boolean"],"mappings":"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"}